#include <iostream>

int* findUniqueElements(int A[], int M, int B[], int N, int& newSize) {
    // Максимально возможный размер третьего массива - это M, если ни один элемент из A не присутствует в B
    int* result = new int[M];
    newSize = 0;

    for (int i = 0; i < M; i++) {
        bool foundInB = false;

        for (int j = 0; j < N; j++) {
            if (A[i] == B[j]) {
                foundInB = true;
                break;
            }
        }

        if (!foundInB) {
            bool alreadyAdded = false;

            // Проверяем, не добавляли ли мы этот элемент ранее
            for (int k = 0; k < newSize; k++) {
                if (A[i] == result[k]) {
                    alreadyAdded = true;
                    break;
                }
            }

            if (!alreadyAdded) {
                result[newSize] = A[i];
                newSize++;
            }
        }
    }

    return result;
}

int main() {
    int M, N;
    std::cout << "Enter the size of array A: ";
    std::cin >> M;
    int A[M];
    std::cout << "Enter elements of array A: ";
    for (int i = 0; i < M; i++) {
        std::cin >> A[i];
    }

    std::cout << "Enter the size of array B: ";
    std::cin >> N;
    int B[N];
    std::cout << "Enter elements of array B: ";
    for (int i = 0; i < N; i++) {
        std::cin >> B[i];
    }

    int newSize;
    int* uniqueElements = findUniqueElements(A, M, B, N, newSize);

    std::cout << "Unique elements in A (not in B) without repetitions: ";
    for (int i = 0; i < newSize; i++) {
        std::cout << uniqueElements[i] << " ";
    }
    std::cout << std::endl;

    // Освобождаем выделенную динамическую память
    delete[] uniqueElements;

    return 0;
}
